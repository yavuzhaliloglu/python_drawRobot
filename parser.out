Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> expression
Rule 2     expression -> LOOP NUMBER LPAREN stmnt RPAREN term expression
Rule 3     expression -> term LOOP NUMBER LPAREN stmnt RPAREN expression
Rule 4     expression -> stmnt
Rule 5     expression -> empty
Rule 6     stmnt -> stmnt FORWARD NUMBER term expression
Rule 7     stmnt -> stmnt RIGHT NUMBER term expression
Rule 8     stmnt -> term RIGHT NUMBER term expression
Rule 9     stmnt -> term FORWARD NUMBER term expression
Rule 10    stmnt -> expression
Rule 11    stmnt -> empty
Rule 12    term -> PEN NUMBER COLOR LINECOLOR
Rule 13    term -> COLOR LINECOLOR PEN NUMBER
Rule 14    term -> PEN NUMBER
Rule 15    term -> COLOR LINECOLOR
Rule 16    term -> empty
Rule 17    empty -> <empty>

Terminals, with rules where they appear

COLOR                : 12 13 15
FORWARD              : 6 9
LINECOLOR            : 12 13 15
LOOP                 : 2 3
LPAREN               : 2 3
NUMBER               : 2 3 6 7 8 9 12 13 14
PEN                  : 12 13 14
RIGHT                : 7 8
RPAREN               : 2 3
error                : 

Nonterminals, with rules where they appear

empty                : 5 11 16
expression           : 1 2 3 6 7 8 9 10
statement            : 0
stmnt                : 2 3 4 6 7
term                 : 2 3 6 7 8 8 9 9

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . expression
    (2) expression -> . LOOP NUMBER LPAREN stmnt RPAREN term expression
    (3) expression -> . term LOOP NUMBER LPAREN stmnt RPAREN expression
    (4) expression -> . stmnt
    (5) expression -> . empty
    (12) term -> . PEN NUMBER COLOR LINECOLOR
    (13) term -> . COLOR LINECOLOR PEN NUMBER
    (14) term -> . PEN NUMBER
    (15) term -> . COLOR LINECOLOR
    (16) term -> . empty
    (6) stmnt -> . stmnt FORWARD NUMBER term expression
    (7) stmnt -> . stmnt RIGHT NUMBER term expression
    (8) stmnt -> . term RIGHT NUMBER term expression
    (9) stmnt -> . term FORWARD NUMBER term expression
    (10) stmnt -> . expression
    (11) stmnt -> . empty
    (17) empty -> .

  ! shift/reduce conflict for LOOP resolved as shift
    LOOP            shift and go to state 3
    PEN             shift and go to state 7
    COLOR           shift and go to state 8
    $end            reduce using rule 17 (empty -> .)
    FORWARD         reduce using rule 17 (empty -> .)
    RIGHT           reduce using rule 17 (empty -> .)

  ! LOOP            [ reduce using rule 17 (empty -> .) ]

    statement                      shift and go to state 1
    expression                     shift and go to state 2
    stmnt                          shift and go to state 4
    term                           shift and go to state 5
    empty                          shift and go to state 6

state 1

    (0) S' -> statement .



state 2

    (1) statement -> expression .
    (10) stmnt -> expression .

  ! reduce/reduce conflict for $end resolved using rule 1 (statement -> expression .)
    $end            reduce using rule 1 (statement -> expression .)
    FORWARD         reduce using rule 10 (stmnt -> expression .)
    RIGHT           reduce using rule 10 (stmnt -> expression .)

  ! $end            [ reduce using rule 10 (stmnt -> expression .) ]


state 3

    (2) expression -> LOOP . NUMBER LPAREN stmnt RPAREN term expression

    NUMBER          shift and go to state 9


state 4

    (4) expression -> stmnt .
    (6) stmnt -> stmnt . FORWARD NUMBER term expression
    (7) stmnt -> stmnt . RIGHT NUMBER term expression

  ! shift/reduce conflict for FORWARD resolved as shift
  ! shift/reduce conflict for RIGHT resolved as shift
    $end            reduce using rule 4 (expression -> stmnt .)
    RPAREN          reduce using rule 4 (expression -> stmnt .)
    FORWARD         shift and go to state 10
    RIGHT           shift and go to state 11

  ! FORWARD         [ reduce using rule 4 (expression -> stmnt .) ]
  ! RIGHT           [ reduce using rule 4 (expression -> stmnt .) ]


state 5

    (3) expression -> term . LOOP NUMBER LPAREN stmnt RPAREN expression
    (8) stmnt -> term . RIGHT NUMBER term expression
    (9) stmnt -> term . FORWARD NUMBER term expression

    LOOP            shift and go to state 12
    RIGHT           shift and go to state 13
    FORWARD         shift and go to state 14


state 6

    (5) expression -> empty .
    (16) term -> empty .
    (11) stmnt -> empty .

  ! reduce/reduce conflict for RIGHT resolved using rule 5 (expression -> empty .)
  ! reduce/reduce conflict for FORWARD resolved using rule 5 (expression -> empty .)
  ! reduce/reduce conflict for $end resolved using rule 5 (expression -> empty .)
  ! reduce/reduce conflict for FORWARD resolved using rule 5 (expression -> empty .)
  ! reduce/reduce conflict for RIGHT resolved using rule 5 (expression -> empty .)
  ! reduce/reduce conflict for RPAREN resolved using rule 5 (expression -> empty .)
    $end            reduce using rule 5 (expression -> empty .)
    FORWARD         reduce using rule 5 (expression -> empty .)
    RIGHT           reduce using rule 5 (expression -> empty .)
    RPAREN          reduce using rule 5 (expression -> empty .)
    LOOP            reduce using rule 16 (term -> empty .)

  ! RIGHT           [ reduce using rule 16 (term -> empty .) ]
  ! FORWARD         [ reduce using rule 16 (term -> empty .) ]
  ! $end            [ reduce using rule 11 (stmnt -> empty .) ]
  ! FORWARD         [ reduce using rule 11 (stmnt -> empty .) ]
  ! RIGHT           [ reduce using rule 11 (stmnt -> empty .) ]
  ! RPAREN          [ reduce using rule 11 (stmnt -> empty .) ]


state 7

    (12) term -> PEN . NUMBER COLOR LINECOLOR
    (14) term -> PEN . NUMBER

    NUMBER          shift and go to state 15


state 8

    (13) term -> COLOR . LINECOLOR PEN NUMBER
    (15) term -> COLOR . LINECOLOR

    LINECOLOR       shift and go to state 16


state 9

    (2) expression -> LOOP NUMBER . LPAREN stmnt RPAREN term expression

    LPAREN          shift and go to state 17


state 10

    (6) stmnt -> stmnt FORWARD . NUMBER term expression

    NUMBER          shift and go to state 18


state 11

    (7) stmnt -> stmnt RIGHT . NUMBER term expression

    NUMBER          shift and go to state 19


state 12

    (3) expression -> term LOOP . NUMBER LPAREN stmnt RPAREN expression

    NUMBER          shift and go to state 20


state 13

    (8) stmnt -> term RIGHT . NUMBER term expression

    NUMBER          shift and go to state 21


state 14

    (9) stmnt -> term FORWARD . NUMBER term expression

    NUMBER          shift and go to state 22


state 15

    (12) term -> PEN NUMBER . COLOR LINECOLOR
    (14) term -> PEN NUMBER .

  ! shift/reduce conflict for COLOR resolved as shift
    COLOR           shift and go to state 23
    LOOP            reduce using rule 14 (term -> PEN NUMBER .)
    RIGHT           reduce using rule 14 (term -> PEN NUMBER .)
    FORWARD         reduce using rule 14 (term -> PEN NUMBER .)
    PEN             reduce using rule 14 (term -> PEN NUMBER .)
    $end            reduce using rule 14 (term -> PEN NUMBER .)
    RPAREN          reduce using rule 14 (term -> PEN NUMBER .)

  ! COLOR           [ reduce using rule 14 (term -> PEN NUMBER .) ]


state 16

    (13) term -> COLOR LINECOLOR . PEN NUMBER
    (15) term -> COLOR LINECOLOR .

  ! shift/reduce conflict for PEN resolved as shift
    PEN             shift and go to state 24
    LOOP            reduce using rule 15 (term -> COLOR LINECOLOR .)
    RIGHT           reduce using rule 15 (term -> COLOR LINECOLOR .)
    FORWARD         reduce using rule 15 (term -> COLOR LINECOLOR .)
    COLOR           reduce using rule 15 (term -> COLOR LINECOLOR .)
    $end            reduce using rule 15 (term -> COLOR LINECOLOR .)
    RPAREN          reduce using rule 15 (term -> COLOR LINECOLOR .)

  ! PEN             [ reduce using rule 15 (term -> COLOR LINECOLOR .) ]


state 17

    (2) expression -> LOOP NUMBER LPAREN . stmnt RPAREN term expression
    (6) stmnt -> . stmnt FORWARD NUMBER term expression
    (7) stmnt -> . stmnt RIGHT NUMBER term expression
    (8) stmnt -> . term RIGHT NUMBER term expression
    (9) stmnt -> . term FORWARD NUMBER term expression
    (10) stmnt -> . expression
    (11) stmnt -> . empty
    (12) term -> . PEN NUMBER COLOR LINECOLOR
    (13) term -> . COLOR LINECOLOR PEN NUMBER
    (14) term -> . PEN NUMBER
    (15) term -> . COLOR LINECOLOR
    (16) term -> . empty
    (2) expression -> . LOOP NUMBER LPAREN stmnt RPAREN term expression
    (3) expression -> . term LOOP NUMBER LPAREN stmnt RPAREN expression
    (4) expression -> . stmnt
    (5) expression -> . empty
    (17) empty -> .

  ! shift/reduce conflict for LOOP resolved as shift
    PEN             shift and go to state 7
    COLOR           shift and go to state 8
    LOOP            shift and go to state 3
    RPAREN          reduce using rule 17 (empty -> .)
    FORWARD         reduce using rule 17 (empty -> .)
    RIGHT           reduce using rule 17 (empty -> .)

  ! LOOP            [ reduce using rule 17 (empty -> .) ]

    stmnt                          shift and go to state 25
    term                           shift and go to state 26
    expression                     shift and go to state 27
    empty                          shift and go to state 28

state 18

    (6) stmnt -> stmnt FORWARD NUMBER . term expression
    (12) term -> . PEN NUMBER COLOR LINECOLOR
    (13) term -> . COLOR LINECOLOR PEN NUMBER
    (14) term -> . PEN NUMBER
    (15) term -> . COLOR LINECOLOR
    (16) term -> . empty
    (17) empty -> .

  ! shift/reduce conflict for PEN resolved as shift
  ! shift/reduce conflict for COLOR resolved as shift
    PEN             shift and go to state 7
    COLOR           shift and go to state 8
    LOOP            reduce using rule 17 (empty -> .)
    RIGHT           reduce using rule 17 (empty -> .)
    FORWARD         reduce using rule 17 (empty -> .)
    $end            reduce using rule 17 (empty -> .)
    RPAREN          reduce using rule 17 (empty -> .)

  ! PEN             [ reduce using rule 17 (empty -> .) ]
  ! COLOR           [ reduce using rule 17 (empty -> .) ]

    term                           shift and go to state 29
    empty                          shift and go to state 30

state 19

    (7) stmnt -> stmnt RIGHT NUMBER . term expression
    (12) term -> . PEN NUMBER COLOR LINECOLOR
    (13) term -> . COLOR LINECOLOR PEN NUMBER
    (14) term -> . PEN NUMBER
    (15) term -> . COLOR LINECOLOR
    (16) term -> . empty
    (17) empty -> .

  ! shift/reduce conflict for PEN resolved as shift
  ! shift/reduce conflict for COLOR resolved as shift
    PEN             shift and go to state 7
    COLOR           shift and go to state 8
    LOOP            reduce using rule 17 (empty -> .)
    RIGHT           reduce using rule 17 (empty -> .)
    FORWARD         reduce using rule 17 (empty -> .)
    $end            reduce using rule 17 (empty -> .)
    RPAREN          reduce using rule 17 (empty -> .)

  ! PEN             [ reduce using rule 17 (empty -> .) ]
  ! COLOR           [ reduce using rule 17 (empty -> .) ]

    term                           shift and go to state 31
    empty                          shift and go to state 30

state 20

    (3) expression -> term LOOP NUMBER . LPAREN stmnt RPAREN expression

    LPAREN          shift and go to state 32


state 21

    (8) stmnt -> term RIGHT NUMBER . term expression
    (12) term -> . PEN NUMBER COLOR LINECOLOR
    (13) term -> . COLOR LINECOLOR PEN NUMBER
    (14) term -> . PEN NUMBER
    (15) term -> . COLOR LINECOLOR
    (16) term -> . empty
    (17) empty -> .

  ! shift/reduce conflict for PEN resolved as shift
  ! shift/reduce conflict for COLOR resolved as shift
    PEN             shift and go to state 7
    COLOR           shift and go to state 8
    LOOP            reduce using rule 17 (empty -> .)
    RIGHT           reduce using rule 17 (empty -> .)
    FORWARD         reduce using rule 17 (empty -> .)
    $end            reduce using rule 17 (empty -> .)
    RPAREN          reduce using rule 17 (empty -> .)

  ! PEN             [ reduce using rule 17 (empty -> .) ]
  ! COLOR           [ reduce using rule 17 (empty -> .) ]

    term                           shift and go to state 33
    empty                          shift and go to state 30

state 22

    (9) stmnt -> term FORWARD NUMBER . term expression
    (12) term -> . PEN NUMBER COLOR LINECOLOR
    (13) term -> . COLOR LINECOLOR PEN NUMBER
    (14) term -> . PEN NUMBER
    (15) term -> . COLOR LINECOLOR
    (16) term -> . empty
    (17) empty -> .

  ! shift/reduce conflict for PEN resolved as shift
  ! shift/reduce conflict for COLOR resolved as shift
    PEN             shift and go to state 7
    COLOR           shift and go to state 8
    LOOP            reduce using rule 17 (empty -> .)
    RIGHT           reduce using rule 17 (empty -> .)
    FORWARD         reduce using rule 17 (empty -> .)
    $end            reduce using rule 17 (empty -> .)
    RPAREN          reduce using rule 17 (empty -> .)

  ! PEN             [ reduce using rule 17 (empty -> .) ]
  ! COLOR           [ reduce using rule 17 (empty -> .) ]

    term                           shift and go to state 34
    empty                          shift and go to state 30

state 23

    (12) term -> PEN NUMBER COLOR . LINECOLOR

    LINECOLOR       shift and go to state 35


state 24

    (13) term -> COLOR LINECOLOR PEN . NUMBER

    NUMBER          shift and go to state 36


state 25

    (2) expression -> LOOP NUMBER LPAREN stmnt . RPAREN term expression
    (6) stmnt -> stmnt . FORWARD NUMBER term expression
    (7) stmnt -> stmnt . RIGHT NUMBER term expression
    (4) expression -> stmnt .

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for FORWARD resolved as shift
  ! shift/reduce conflict for RIGHT resolved as shift
    RPAREN          shift and go to state 37
    FORWARD         shift and go to state 10
    RIGHT           shift and go to state 11

  ! RPAREN          [ reduce using rule 4 (expression -> stmnt .) ]
  ! FORWARD         [ reduce using rule 4 (expression -> stmnt .) ]
  ! RIGHT           [ reduce using rule 4 (expression -> stmnt .) ]


state 26

    (8) stmnt -> term . RIGHT NUMBER term expression
    (9) stmnt -> term . FORWARD NUMBER term expression
    (3) expression -> term . LOOP NUMBER LPAREN stmnt RPAREN expression

    RIGHT           shift and go to state 13
    FORWARD         shift and go to state 14
    LOOP            shift and go to state 12


state 27

    (10) stmnt -> expression .

    RPAREN          reduce using rule 10 (stmnt -> expression .)
    FORWARD         reduce using rule 10 (stmnt -> expression .)
    RIGHT           reduce using rule 10 (stmnt -> expression .)


state 28

    (11) stmnt -> empty .
    (16) term -> empty .
    (5) expression -> empty .

  ! reduce/reduce conflict for RIGHT resolved using rule 11 (stmnt -> empty .)
  ! reduce/reduce conflict for FORWARD resolved using rule 11 (stmnt -> empty .)
  ! reduce/reduce conflict for RPAREN resolved using rule 5 (expression -> empty .)
  ! reduce/reduce conflict for FORWARD resolved using rule 5 (expression -> empty .)
  ! reduce/reduce conflict for RIGHT resolved using rule 5 (expression -> empty .)
    LOOP            reduce using rule 16 (term -> empty .)
    RPAREN          reduce using rule 5 (expression -> empty .)
    FORWARD         reduce using rule 5 (expression -> empty .)
    RIGHT           reduce using rule 5 (expression -> empty .)

  ! RPAREN          [ reduce using rule 11 (stmnt -> empty .) ]
  ! FORWARD         [ reduce using rule 11 (stmnt -> empty .) ]
  ! RIGHT           [ reduce using rule 11 (stmnt -> empty .) ]
  ! RIGHT           [ reduce using rule 16 (term -> empty .) ]
  ! FORWARD         [ reduce using rule 16 (term -> empty .) ]


state 29

    (6) stmnt -> stmnt FORWARD NUMBER term . expression
    (2) expression -> . LOOP NUMBER LPAREN stmnt RPAREN term expression
    (3) expression -> . term LOOP NUMBER LPAREN stmnt RPAREN expression
    (4) expression -> . stmnt
    (5) expression -> . empty
    (12) term -> . PEN NUMBER COLOR LINECOLOR
    (13) term -> . COLOR LINECOLOR PEN NUMBER
    (14) term -> . PEN NUMBER
    (15) term -> . COLOR LINECOLOR
    (16) term -> . empty
    (6) stmnt -> . stmnt FORWARD NUMBER term expression
    (7) stmnt -> . stmnt RIGHT NUMBER term expression
    (8) stmnt -> . term RIGHT NUMBER term expression
    (9) stmnt -> . term FORWARD NUMBER term expression
    (10) stmnt -> . expression
    (11) stmnt -> . empty
    (17) empty -> .

  ! shift/reduce conflict for LOOP resolved as shift
    LOOP            shift and go to state 3
    PEN             shift and go to state 7
    COLOR           shift and go to state 8
    FORWARD         reduce using rule 17 (empty -> .)
    RIGHT           reduce using rule 17 (empty -> .)
    $end            reduce using rule 17 (empty -> .)
    RPAREN          reduce using rule 17 (empty -> .)

  ! LOOP            [ reduce using rule 17 (empty -> .) ]

    stmnt                          shift and go to state 4
    term                           shift and go to state 5
    expression                     shift and go to state 38
    empty                          shift and go to state 6

state 30

    (16) term -> empty .

    LOOP            reduce using rule 16 (term -> empty .)
    PEN             reduce using rule 16 (term -> empty .)
    COLOR           reduce using rule 16 (term -> empty .)
    RIGHT           reduce using rule 16 (term -> empty .)
    FORWARD         reduce using rule 16 (term -> empty .)
    $end            reduce using rule 16 (term -> empty .)
    RPAREN          reduce using rule 16 (term -> empty .)


state 31

    (7) stmnt -> stmnt RIGHT NUMBER term . expression
    (2) expression -> . LOOP NUMBER LPAREN stmnt RPAREN term expression
    (3) expression -> . term LOOP NUMBER LPAREN stmnt RPAREN expression
    (4) expression -> . stmnt
    (5) expression -> . empty
    (12) term -> . PEN NUMBER COLOR LINECOLOR
    (13) term -> . COLOR LINECOLOR PEN NUMBER
    (14) term -> . PEN NUMBER
    (15) term -> . COLOR LINECOLOR
    (16) term -> . empty
    (6) stmnt -> . stmnt FORWARD NUMBER term expression
    (7) stmnt -> . stmnt RIGHT NUMBER term expression
    (8) stmnt -> . term RIGHT NUMBER term expression
    (9) stmnt -> . term FORWARD NUMBER term expression
    (10) stmnt -> . expression
    (11) stmnt -> . empty
    (17) empty -> .

  ! shift/reduce conflict for LOOP resolved as shift
    LOOP            shift and go to state 3
    PEN             shift and go to state 7
    COLOR           shift and go to state 8
    FORWARD         reduce using rule 17 (empty -> .)
    RIGHT           reduce using rule 17 (empty -> .)
    $end            reduce using rule 17 (empty -> .)
    RPAREN          reduce using rule 17 (empty -> .)

  ! LOOP            [ reduce using rule 17 (empty -> .) ]

    stmnt                          shift and go to state 4
    term                           shift and go to state 5
    expression                     shift and go to state 39
    empty                          shift and go to state 6

state 32

    (3) expression -> term LOOP NUMBER LPAREN . stmnt RPAREN expression
    (6) stmnt -> . stmnt FORWARD NUMBER term expression
    (7) stmnt -> . stmnt RIGHT NUMBER term expression
    (8) stmnt -> . term RIGHT NUMBER term expression
    (9) stmnt -> . term FORWARD NUMBER term expression
    (10) stmnt -> . expression
    (11) stmnt -> . empty
    (12) term -> . PEN NUMBER COLOR LINECOLOR
    (13) term -> . COLOR LINECOLOR PEN NUMBER
    (14) term -> . PEN NUMBER
    (15) term -> . COLOR LINECOLOR
    (16) term -> . empty
    (2) expression -> . LOOP NUMBER LPAREN stmnt RPAREN term expression
    (3) expression -> . term LOOP NUMBER LPAREN stmnt RPAREN expression
    (4) expression -> . stmnt
    (5) expression -> . empty
    (17) empty -> .

  ! shift/reduce conflict for LOOP resolved as shift
    PEN             shift and go to state 7
    COLOR           shift and go to state 8
    LOOP            shift and go to state 3
    RPAREN          reduce using rule 17 (empty -> .)
    FORWARD         reduce using rule 17 (empty -> .)
    RIGHT           reduce using rule 17 (empty -> .)

  ! LOOP            [ reduce using rule 17 (empty -> .) ]

    term                           shift and go to state 26
    stmnt                          shift and go to state 40
    expression                     shift and go to state 27
    empty                          shift and go to state 28

state 33

    (8) stmnt -> term RIGHT NUMBER term . expression
    (2) expression -> . LOOP NUMBER LPAREN stmnt RPAREN term expression
    (3) expression -> . term LOOP NUMBER LPAREN stmnt RPAREN expression
    (4) expression -> . stmnt
    (5) expression -> . empty
    (12) term -> . PEN NUMBER COLOR LINECOLOR
    (13) term -> . COLOR LINECOLOR PEN NUMBER
    (14) term -> . PEN NUMBER
    (15) term -> . COLOR LINECOLOR
    (16) term -> . empty
    (6) stmnt -> . stmnt FORWARD NUMBER term expression
    (7) stmnt -> . stmnt RIGHT NUMBER term expression
    (8) stmnt -> . term RIGHT NUMBER term expression
    (9) stmnt -> . term FORWARD NUMBER term expression
    (10) stmnt -> . expression
    (11) stmnt -> . empty
    (17) empty -> .

  ! shift/reduce conflict for LOOP resolved as shift
    LOOP            shift and go to state 3
    PEN             shift and go to state 7
    COLOR           shift and go to state 8
    FORWARD         reduce using rule 17 (empty -> .)
    RIGHT           reduce using rule 17 (empty -> .)
    $end            reduce using rule 17 (empty -> .)
    RPAREN          reduce using rule 17 (empty -> .)

  ! LOOP            [ reduce using rule 17 (empty -> .) ]

    term                           shift and go to state 5
    expression                     shift and go to state 41
    stmnt                          shift and go to state 4
    empty                          shift and go to state 6

state 34

    (9) stmnt -> term FORWARD NUMBER term . expression
    (2) expression -> . LOOP NUMBER LPAREN stmnt RPAREN term expression
    (3) expression -> . term LOOP NUMBER LPAREN stmnt RPAREN expression
    (4) expression -> . stmnt
    (5) expression -> . empty
    (12) term -> . PEN NUMBER COLOR LINECOLOR
    (13) term -> . COLOR LINECOLOR PEN NUMBER
    (14) term -> . PEN NUMBER
    (15) term -> . COLOR LINECOLOR
    (16) term -> . empty
    (6) stmnt -> . stmnt FORWARD NUMBER term expression
    (7) stmnt -> . stmnt RIGHT NUMBER term expression
    (8) stmnt -> . term RIGHT NUMBER term expression
    (9) stmnt -> . term FORWARD NUMBER term expression
    (10) stmnt -> . expression
    (11) stmnt -> . empty
    (17) empty -> .

  ! shift/reduce conflict for LOOP resolved as shift
    LOOP            shift and go to state 3
    PEN             shift and go to state 7
    COLOR           shift and go to state 8
    FORWARD         reduce using rule 17 (empty -> .)
    RIGHT           reduce using rule 17 (empty -> .)
    $end            reduce using rule 17 (empty -> .)
    RPAREN          reduce using rule 17 (empty -> .)

  ! LOOP            [ reduce using rule 17 (empty -> .) ]

    term                           shift and go to state 5
    expression                     shift and go to state 42
    stmnt                          shift and go to state 4
    empty                          shift and go to state 6

state 35

    (12) term -> PEN NUMBER COLOR LINECOLOR .

    LOOP            reduce using rule 12 (term -> PEN NUMBER COLOR LINECOLOR .)
    RIGHT           reduce using rule 12 (term -> PEN NUMBER COLOR LINECOLOR .)
    FORWARD         reduce using rule 12 (term -> PEN NUMBER COLOR LINECOLOR .)
    PEN             reduce using rule 12 (term -> PEN NUMBER COLOR LINECOLOR .)
    COLOR           reduce using rule 12 (term -> PEN NUMBER COLOR LINECOLOR .)
    $end            reduce using rule 12 (term -> PEN NUMBER COLOR LINECOLOR .)
    RPAREN          reduce using rule 12 (term -> PEN NUMBER COLOR LINECOLOR .)


state 36

    (13) term -> COLOR LINECOLOR PEN NUMBER .

    LOOP            reduce using rule 13 (term -> COLOR LINECOLOR PEN NUMBER .)
    RIGHT           reduce using rule 13 (term -> COLOR LINECOLOR PEN NUMBER .)
    FORWARD         reduce using rule 13 (term -> COLOR LINECOLOR PEN NUMBER .)
    PEN             reduce using rule 13 (term -> COLOR LINECOLOR PEN NUMBER .)
    COLOR           reduce using rule 13 (term -> COLOR LINECOLOR PEN NUMBER .)
    $end            reduce using rule 13 (term -> COLOR LINECOLOR PEN NUMBER .)
    RPAREN          reduce using rule 13 (term -> COLOR LINECOLOR PEN NUMBER .)


state 37

    (2) expression -> LOOP NUMBER LPAREN stmnt RPAREN . term expression
    (12) term -> . PEN NUMBER COLOR LINECOLOR
    (13) term -> . COLOR LINECOLOR PEN NUMBER
    (14) term -> . PEN NUMBER
    (15) term -> . COLOR LINECOLOR
    (16) term -> . empty
    (17) empty -> .

  ! shift/reduce conflict for PEN resolved as shift
  ! shift/reduce conflict for COLOR resolved as shift
    PEN             shift and go to state 7
    COLOR           shift and go to state 8
    LOOP            reduce using rule 17 (empty -> .)
    RIGHT           reduce using rule 17 (empty -> .)
    FORWARD         reduce using rule 17 (empty -> .)
    $end            reduce using rule 17 (empty -> .)
    RPAREN          reduce using rule 17 (empty -> .)

  ! PEN             [ reduce using rule 17 (empty -> .) ]
  ! COLOR           [ reduce using rule 17 (empty -> .) ]

    term                           shift and go to state 43
    empty                          shift and go to state 30

state 38

    (6) stmnt -> stmnt FORWARD NUMBER term expression .
    (10) stmnt -> expression .

  ! reduce/reduce conflict for FORWARD resolved using rule 6 (stmnt -> stmnt FORWARD NUMBER term expression .)
  ! reduce/reduce conflict for RIGHT resolved using rule 6 (stmnt -> stmnt FORWARD NUMBER term expression .)
  ! reduce/reduce conflict for $end resolved using rule 6 (stmnt -> stmnt FORWARD NUMBER term expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 6 (stmnt -> stmnt FORWARD NUMBER term expression .)
    $end            reduce using rule 6 (stmnt -> stmnt FORWARD NUMBER term expression .)
    FORWARD         reduce using rule 6 (stmnt -> stmnt FORWARD NUMBER term expression .)
    RIGHT           reduce using rule 6 (stmnt -> stmnt FORWARD NUMBER term expression .)
    RPAREN          reduce using rule 6 (stmnt -> stmnt FORWARD NUMBER term expression .)

  ! FORWARD         [ reduce using rule 10 (stmnt -> expression .) ]
  ! RIGHT           [ reduce using rule 10 (stmnt -> expression .) ]
  ! $end            [ reduce using rule 10 (stmnt -> expression .) ]
  ! RPAREN          [ reduce using rule 10 (stmnt -> expression .) ]


state 39

    (7) stmnt -> stmnt RIGHT NUMBER term expression .
    (10) stmnt -> expression .

  ! reduce/reduce conflict for FORWARD resolved using rule 7 (stmnt -> stmnt RIGHT NUMBER term expression .)
  ! reduce/reduce conflict for RIGHT resolved using rule 7 (stmnt -> stmnt RIGHT NUMBER term expression .)
  ! reduce/reduce conflict for $end resolved using rule 7 (stmnt -> stmnt RIGHT NUMBER term expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 7 (stmnt -> stmnt RIGHT NUMBER term expression .)
    $end            reduce using rule 7 (stmnt -> stmnt RIGHT NUMBER term expression .)
    FORWARD         reduce using rule 7 (stmnt -> stmnt RIGHT NUMBER term expression .)
    RIGHT           reduce using rule 7 (stmnt -> stmnt RIGHT NUMBER term expression .)
    RPAREN          reduce using rule 7 (stmnt -> stmnt RIGHT NUMBER term expression .)

  ! FORWARD         [ reduce using rule 10 (stmnt -> expression .) ]
  ! RIGHT           [ reduce using rule 10 (stmnt -> expression .) ]
  ! $end            [ reduce using rule 10 (stmnt -> expression .) ]
  ! RPAREN          [ reduce using rule 10 (stmnt -> expression .) ]


state 40

    (3) expression -> term LOOP NUMBER LPAREN stmnt . RPAREN expression
    (6) stmnt -> stmnt . FORWARD NUMBER term expression
    (7) stmnt -> stmnt . RIGHT NUMBER term expression
    (4) expression -> stmnt .

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for FORWARD resolved as shift
  ! shift/reduce conflict for RIGHT resolved as shift
    RPAREN          shift and go to state 44
    FORWARD         shift and go to state 10
    RIGHT           shift and go to state 11

  ! RPAREN          [ reduce using rule 4 (expression -> stmnt .) ]
  ! FORWARD         [ reduce using rule 4 (expression -> stmnt .) ]
  ! RIGHT           [ reduce using rule 4 (expression -> stmnt .) ]


state 41

    (8) stmnt -> term RIGHT NUMBER term expression .
    (10) stmnt -> expression .

  ! reduce/reduce conflict for FORWARD resolved using rule 8 (stmnt -> term RIGHT NUMBER term expression .)
  ! reduce/reduce conflict for RIGHT resolved using rule 8 (stmnt -> term RIGHT NUMBER term expression .)
  ! reduce/reduce conflict for $end resolved using rule 8 (stmnt -> term RIGHT NUMBER term expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 8 (stmnt -> term RIGHT NUMBER term expression .)
    $end            reduce using rule 8 (stmnt -> term RIGHT NUMBER term expression .)
    FORWARD         reduce using rule 8 (stmnt -> term RIGHT NUMBER term expression .)
    RIGHT           reduce using rule 8 (stmnt -> term RIGHT NUMBER term expression .)
    RPAREN          reduce using rule 8 (stmnt -> term RIGHT NUMBER term expression .)

  ! FORWARD         [ reduce using rule 10 (stmnt -> expression .) ]
  ! RIGHT           [ reduce using rule 10 (stmnt -> expression .) ]
  ! $end            [ reduce using rule 10 (stmnt -> expression .) ]
  ! RPAREN          [ reduce using rule 10 (stmnt -> expression .) ]


state 42

    (9) stmnt -> term FORWARD NUMBER term expression .
    (10) stmnt -> expression .

  ! reduce/reduce conflict for FORWARD resolved using rule 9 (stmnt -> term FORWARD NUMBER term expression .)
  ! reduce/reduce conflict for RIGHT resolved using rule 9 (stmnt -> term FORWARD NUMBER term expression .)
  ! reduce/reduce conflict for $end resolved using rule 9 (stmnt -> term FORWARD NUMBER term expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 9 (stmnt -> term FORWARD NUMBER term expression .)
    $end            reduce using rule 9 (stmnt -> term FORWARD NUMBER term expression .)
    FORWARD         reduce using rule 9 (stmnt -> term FORWARD NUMBER term expression .)
    RIGHT           reduce using rule 9 (stmnt -> term FORWARD NUMBER term expression .)
    RPAREN          reduce using rule 9 (stmnt -> term FORWARD NUMBER term expression .)

  ! FORWARD         [ reduce using rule 10 (stmnt -> expression .) ]
  ! RIGHT           [ reduce using rule 10 (stmnt -> expression .) ]
  ! $end            [ reduce using rule 10 (stmnt -> expression .) ]
  ! RPAREN          [ reduce using rule 10 (stmnt -> expression .) ]


state 43

    (2) expression -> LOOP NUMBER LPAREN stmnt RPAREN term . expression
    (2) expression -> . LOOP NUMBER LPAREN stmnt RPAREN term expression
    (3) expression -> . term LOOP NUMBER LPAREN stmnt RPAREN expression
    (4) expression -> . stmnt
    (5) expression -> . empty
    (12) term -> . PEN NUMBER COLOR LINECOLOR
    (13) term -> . COLOR LINECOLOR PEN NUMBER
    (14) term -> . PEN NUMBER
    (15) term -> . COLOR LINECOLOR
    (16) term -> . empty
    (6) stmnt -> . stmnt FORWARD NUMBER term expression
    (7) stmnt -> . stmnt RIGHT NUMBER term expression
    (8) stmnt -> . term RIGHT NUMBER term expression
    (9) stmnt -> . term FORWARD NUMBER term expression
    (10) stmnt -> . expression
    (11) stmnt -> . empty
    (17) empty -> .

  ! shift/reduce conflict for LOOP resolved as shift
    LOOP            shift and go to state 3
    PEN             shift and go to state 7
    COLOR           shift and go to state 8
    FORWARD         reduce using rule 17 (empty -> .)
    RIGHT           reduce using rule 17 (empty -> .)
    $end            reduce using rule 17 (empty -> .)
    RPAREN          reduce using rule 17 (empty -> .)

  ! LOOP            [ reduce using rule 17 (empty -> .) ]

    stmnt                          shift and go to state 4
    term                           shift and go to state 5
    expression                     shift and go to state 45
    empty                          shift and go to state 6

state 44

    (3) expression -> term LOOP NUMBER LPAREN stmnt RPAREN . expression
    (2) expression -> . LOOP NUMBER LPAREN stmnt RPAREN term expression
    (3) expression -> . term LOOP NUMBER LPAREN stmnt RPAREN expression
    (4) expression -> . stmnt
    (5) expression -> . empty
    (12) term -> . PEN NUMBER COLOR LINECOLOR
    (13) term -> . COLOR LINECOLOR PEN NUMBER
    (14) term -> . PEN NUMBER
    (15) term -> . COLOR LINECOLOR
    (16) term -> . empty
    (6) stmnt -> . stmnt FORWARD NUMBER term expression
    (7) stmnt -> . stmnt RIGHT NUMBER term expression
    (8) stmnt -> . term RIGHT NUMBER term expression
    (9) stmnt -> . term FORWARD NUMBER term expression
    (10) stmnt -> . expression
    (11) stmnt -> . empty
    (17) empty -> .

  ! shift/reduce conflict for LOOP resolved as shift
    LOOP            shift and go to state 3
    PEN             shift and go to state 7
    COLOR           shift and go to state 8
    FORWARD         reduce using rule 17 (empty -> .)
    RIGHT           reduce using rule 17 (empty -> .)
    $end            reduce using rule 17 (empty -> .)
    RPAREN          reduce using rule 17 (empty -> .)

  ! LOOP            [ reduce using rule 17 (empty -> .) ]

    term                           shift and go to state 5
    stmnt                          shift and go to state 4
    expression                     shift and go to state 46
    empty                          shift and go to state 6

state 45

    (2) expression -> LOOP NUMBER LPAREN stmnt RPAREN term expression .
    (10) stmnt -> expression .

  ! reduce/reduce conflict for FORWARD resolved using rule 2 (expression -> LOOP NUMBER LPAREN stmnt RPAREN term expression .)
  ! reduce/reduce conflict for RIGHT resolved using rule 2 (expression -> LOOP NUMBER LPAREN stmnt RPAREN term expression .)
  ! reduce/reduce conflict for $end resolved using rule 2 (expression -> LOOP NUMBER LPAREN stmnt RPAREN term expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 2 (expression -> LOOP NUMBER LPAREN stmnt RPAREN term expression .)
    $end            reduce using rule 2 (expression -> LOOP NUMBER LPAREN stmnt RPAREN term expression .)
    FORWARD         reduce using rule 2 (expression -> LOOP NUMBER LPAREN stmnt RPAREN term expression .)
    RIGHT           reduce using rule 2 (expression -> LOOP NUMBER LPAREN stmnt RPAREN term expression .)
    RPAREN          reduce using rule 2 (expression -> LOOP NUMBER LPAREN stmnt RPAREN term expression .)

  ! FORWARD         [ reduce using rule 10 (stmnt -> expression .) ]
  ! RIGHT           [ reduce using rule 10 (stmnt -> expression .) ]
  ! $end            [ reduce using rule 10 (stmnt -> expression .) ]
  ! RPAREN          [ reduce using rule 10 (stmnt -> expression .) ]


state 46

    (3) expression -> term LOOP NUMBER LPAREN stmnt RPAREN expression .
    (10) stmnt -> expression .

  ! reduce/reduce conflict for FORWARD resolved using rule 3 (expression -> term LOOP NUMBER LPAREN stmnt RPAREN expression .)
  ! reduce/reduce conflict for RIGHT resolved using rule 3 (expression -> term LOOP NUMBER LPAREN stmnt RPAREN expression .)
  ! reduce/reduce conflict for $end resolved using rule 3 (expression -> term LOOP NUMBER LPAREN stmnt RPAREN expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 3 (expression -> term LOOP NUMBER LPAREN stmnt RPAREN expression .)
    $end            reduce using rule 3 (expression -> term LOOP NUMBER LPAREN stmnt RPAREN expression .)
    FORWARD         reduce using rule 3 (expression -> term LOOP NUMBER LPAREN stmnt RPAREN expression .)
    RIGHT           reduce using rule 3 (expression -> term LOOP NUMBER LPAREN stmnt RPAREN expression .)
    RPAREN          reduce using rule 3 (expression -> term LOOP NUMBER LPAREN stmnt RPAREN expression .)

  ! FORWARD         [ reduce using rule 10 (stmnt -> expression .) ]
  ! RIGHT           [ reduce using rule 10 (stmnt -> expression .) ]
  ! $end            [ reduce using rule 10 (stmnt -> expression .) ]
  ! RPAREN          [ reduce using rule 10 (stmnt -> expression .) ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LOOP in state 0 resolved as shift
WARNING: shift/reduce conflict for FORWARD in state 4 resolved as shift
WARNING: shift/reduce conflict for RIGHT in state 4 resolved as shift
WARNING: shift/reduce conflict for COLOR in state 15 resolved as shift
WARNING: shift/reduce conflict for PEN in state 16 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 17 resolved as shift
WARNING: shift/reduce conflict for PEN in state 18 resolved as shift
WARNING: shift/reduce conflict for COLOR in state 18 resolved as shift
WARNING: shift/reduce conflict for PEN in state 19 resolved as shift
WARNING: shift/reduce conflict for COLOR in state 19 resolved as shift
WARNING: shift/reduce conflict for PEN in state 21 resolved as shift
WARNING: shift/reduce conflict for COLOR in state 21 resolved as shift
WARNING: shift/reduce conflict for PEN in state 22 resolved as shift
WARNING: shift/reduce conflict for COLOR in state 22 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 25 resolved as shift
WARNING: shift/reduce conflict for FORWARD in state 25 resolved as shift
WARNING: shift/reduce conflict for RIGHT in state 25 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 29 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 31 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 32 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 33 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 34 resolved as shift
WARNING: shift/reduce conflict for PEN in state 37 resolved as shift
WARNING: shift/reduce conflict for COLOR in state 37 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 40 resolved as shift
WARNING: shift/reduce conflict for FORWARD in state 40 resolved as shift
WARNING: shift/reduce conflict for RIGHT in state 40 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 43 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 44 resolved as shift
WARNING: reduce/reduce conflict in state 2 resolved using rule (statement -> expression)
WARNING: rejected rule (stmnt -> expression) in state 2
WARNING: reduce/reduce conflict in state 6 resolved using rule (expression -> empty)
WARNING: rejected rule (term -> empty) in state 6
WARNING: reduce/reduce conflict in state 6 resolved using rule (expression -> empty)
WARNING: rejected rule (stmnt -> empty) in state 6
WARNING: reduce/reduce conflict in state 28 resolved using rule (stmnt -> empty)
WARNING: rejected rule (term -> empty) in state 28
WARNING: reduce/reduce conflict in state 28 resolved using rule (expression -> empty)
WARNING: rejected rule (stmnt -> empty) in state 28
WARNING: reduce/reduce conflict in state 38 resolved using rule (stmnt -> stmnt FORWARD NUMBER term expression)
WARNING: rejected rule (stmnt -> expression) in state 38
WARNING: reduce/reduce conflict in state 39 resolved using rule (stmnt -> stmnt RIGHT NUMBER term expression)
WARNING: rejected rule (stmnt -> expression) in state 39
WARNING: reduce/reduce conflict in state 41 resolved using rule (stmnt -> term RIGHT NUMBER term expression)
WARNING: rejected rule (stmnt -> expression) in state 41
WARNING: reduce/reduce conflict in state 42 resolved using rule (stmnt -> term FORWARD NUMBER term expression)
WARNING: rejected rule (stmnt -> expression) in state 42
WARNING: reduce/reduce conflict in state 45 resolved using rule (expression -> LOOP NUMBER LPAREN stmnt RPAREN term expression)
WARNING: rejected rule (stmnt -> expression) in state 45
WARNING: reduce/reduce conflict in state 46 resolved using rule (expression -> term LOOP NUMBER LPAREN stmnt RPAREN expression)
WARNING: rejected rule (stmnt -> expression) in state 46
WARNING: Rule (stmnt -> empty) is never reduced
